// <auto-generated />
using System;
using JournalyApiV2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JournalyApiV2.Data.Migrations
{
    [DbContext(typeof(JournalyDbContext))]
    [Migration("20231019020641_3")]
    partial class _3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JournalyApiV2.Data.Models.Activity", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("Deleted");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Icon");

                    b.Property<short>("IconTypeId")
                        .HasColumnType("smallint")
                        .HasColumnName("IconTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<short>("Order")
                        .HasColumnType("smallint")
                        .HasColumnName("Order");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.HasKey("Uuid");

                    b.HasIndex("IconTypeId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.ActivityEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ActivityUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ActivityUuid");

                    b.Property<Guid>("JournalEntryUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("JournalEntryUuid");

                    b.HasKey("Id");

                    b.HasIndex("ActivityUuid");

                    b.HasIndex("JournalEntryUuid");

                    b.ToTable("ActivityEntry");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.Emotion", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Uuid");

                    b.Property<Guid>("CategoryUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("CategoryUuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("Deleted");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Icon");

                    b.Property<short>("IconTypeId")
                        .HasColumnType("smallint")
                        .HasColumnName("IconTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<short>("Order")
                        .HasColumnType("smallint")
                        .HasColumnName("Order");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.HasKey("Uuid");

                    b.HasIndex("CategoryUuid");

                    b.HasIndex("IconTypeId");

                    b.ToTable("Emotion");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.EmotionCategory", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Uuid");

                    b.Property<bool>("AllowMultiple")
                        .HasColumnType("boolean")
                        .HasColumnName("AllowMultiple");

                    b.Property<bool>("Default")
                        .HasColumnType("boolean")
                        .HasColumnName("Default");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("Deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<short>("Order")
                        .HasColumnType("smallint")
                        .HasColumnName("Order");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.HasKey("Uuid");

                    b.ToTable("EmotionCategory");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.EmotionEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("EmotionUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("EmotionUuid");

                    b.Property<Guid>("JournalEntryUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("JournalEntryUuid");

                    b.HasKey("Id");

                    b.HasIndex("EmotionUuid");

                    b.HasIndex("JournalEntryUuid");

                    b.ToTable("EmotionEntry");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.IconType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("IconType");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.JournalEntry", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Body");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("Deleted");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.HasKey("Uuid");

                    b.ToTable("JournalEntry");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.JournalEntryCategoryValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CategoryUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("CategoryUuid");

                    b.Property<Guid>("JournalEntryUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("JournalEntryUuid");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("CategoryUuid");

                    b.HasIndex("JournalEntryUuid");

                    b.ToTable("JournalEntryCategoryValue");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.Activity", b =>
                {
                    b.HasOne("JournalyApiV2.Data.Models.IconType", "IconType")
                        .WithMany("Activities")
                        .HasForeignKey("IconTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IconType");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.ActivityEntry", b =>
                {
                    b.HasOne("JournalyApiV2.Data.Models.Activity", "Activity")
                        .WithMany("ActivityEntries")
                        .HasForeignKey("ActivityUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalyApiV2.Data.Models.JournalEntry", "JournalEntry")
                        .WithMany("ActivityEntries")
                        .HasForeignKey("JournalEntryUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("JournalEntry");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.Emotion", b =>
                {
                    b.HasOne("JournalyApiV2.Data.Models.EmotionCategory", "EmotionCategory")
                        .WithMany("Emotions")
                        .HasForeignKey("CategoryUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalyApiV2.Data.Models.IconType", "IconType")
                        .WithMany("Emotions")
                        .HasForeignKey("IconTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmotionCategory");

                    b.Navigation("IconType");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.EmotionEntry", b =>
                {
                    b.HasOne("JournalyApiV2.Data.Models.Emotion", "Emotion")
                        .WithMany("EmotionEntries")
                        .HasForeignKey("EmotionUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalyApiV2.Data.Models.JournalEntry", "JournalEntry")
                        .WithMany("EmotionEntries")
                        .HasForeignKey("JournalEntryUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emotion");

                    b.Navigation("JournalEntry");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.JournalEntryCategoryValue", b =>
                {
                    b.HasOne("JournalyApiV2.Data.Models.EmotionCategory", "EmotionCategory")
                        .WithMany("JournalEntryCategoryValues")
                        .HasForeignKey("CategoryUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalyApiV2.Data.Models.JournalEntry", "JournalEntry")
                        .WithMany("JournalEntryCategoryValues")
                        .HasForeignKey("JournalEntryUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmotionCategory");

                    b.Navigation("JournalEntry");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.Activity", b =>
                {
                    b.Navigation("ActivityEntries");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.Emotion", b =>
                {
                    b.Navigation("EmotionEntries");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.EmotionCategory", b =>
                {
                    b.Navigation("Emotions");

                    b.Navigation("JournalEntryCategoryValues");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.IconType", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Emotions");
                });

            modelBuilder.Entity("JournalyApiV2.Data.Models.JournalEntry", b =>
                {
                    b.Navigation("ActivityEntries");

                    b.Navigation("EmotionEntries");

                    b.Navigation("JournalEntryCategoryValues");
                });
#pragma warning restore 612, 618
        }
    }
}
